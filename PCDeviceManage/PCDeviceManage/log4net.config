<log4net>
  <root>
    <level value="ALL" />
    <appender-ref ref="MyRollingFileAppender" />
    <appender-ref ref="PidRollingLogFileAppender"></appender-ref>
  </root>
  <!-- 调试日志类 -->
  <logger name="LogDebug">
    <!-- 日志级别【OFF > FATAL > ERROR > WARN > INFO > DEBUG  > ALL】 -->
    <level value="ALL" />
    <appender-ref ref="MyRollingFileAppender" />
  </logger>
  <!-- 调试日志的输出配置（将日志以回滚文件的形式写到文件中） -->
  <appender name="MyRollingFileAppender" type="log4net.Appender.RollingFileAppender">
    <!-- 日志目录 -->
    <param name="File" value="Log\" />
    <!-- 设置编码 -->
    <Encoding value="UTF-8" />
    <!-- 是否追加到文件 -->
    <param name="AppendToFile" value="true" />
    <!-- 记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log，官方说线程非安全 -->
    <param name="lockingModel"  type="log4net.Appender.FileAppender+MinimalLock" />
    <!-- 是否只写到一个文件中 -->
    <param name="StaticLogFileName" value="false" />
    <!-- 最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数 -->
    <param name="MaxSizeRollBackups" value="100" />
    <!-- 按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite]) -->
    <param name="RollingStyle" value="Composite" />
    <!-- 【在日期方式与混合方式下使用】 -->
    <!-- 按日期产生文件夹，文件名固定 -->
    <param name="DatePattern" value="yyyyMMdd'.Log'" />
    <!-- 【在日期方式与混合方式下使用】 -->
    <!-- 单个文件的大小，正整数，可用的单位:KB|MB|GB-->
    <param name="MaximumFileSize" value="100MB" />
    <!-- 日志布局-->
    <layout type="log4net.Layout.PatternLayout">
      <!--输出样式-->
      <param name="ConversionPattern" value="%d %-5level [%property{pid}-%thread] %logger  %m  %F(%L行)%n"/>
      <param name="Header" value="--------------------------------------------------【Header】--------------------------------------------------&#13;&#10;" />
      <param name="Footer" value="&#13;&#10;--------------------------------------------------【Footer】--------------------------------------------------&#13;&#10;&#13;&#10;" />
    </layout>
  </appender>
  
  <!--按进程ID分类的日志输出-->
  <appender name="PidRollingLogFileAppender" type="log4net.Appender.RollingFileAppender" >
      <!-- <lockingModel type="log4net.Appender.FileAppender+MinimalLock" /> -->
      <file type="log4net.Util.PatternString" value="log/按进程id分组/%property{pid}.log"/>
      <rollingStyle value="Date" />
      <param name="MaximumFileSize" value="100MB" />
      <param name="Encoding" value="utf-8" />
      <!--<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />-->  
      <param name="AppendToFile" value="true" />  
      <layout type="log4net.Layout.PatternLayout">  
        <param name="ConversionPattern" value="%d %-5level [%property{pid}-%thread] %logger  %m  %F(%L行)%n"/>
        <param name="Header" value="--------------------------------------------------【Header】--------------------------------------------------&#13;&#10;" />
        <param name="Footer" value="&#13;&#10;--------------------------------------------------【Footer】--------------------------------------------------&#13;&#10;&#13;&#10;" />
      </layout>  
    </appender>  



  <!-- 控制台显示日志 -->
  <appender name="MyConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
    <!-- 设置不同级别控制台显示的不同颜色 -->
    <mapping>
      <level value="INFO" />
      <foreColor value="Green" />
    </mapping>
    <mapping>
      <level value="ERROR" />
      <foreColor value="Red, HighIntensity" />
    </mapping>
    <!-- 记录的格式。 -->
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%d %-5level [%thread] %logger %m%n"/>
    </layout>
    <!-- 
      过滤器type有如下几种类型
      log4net.Filter.DenyAllFilter        丢弃所有日志事件。
      log4net.Filter.LevelMatchFilter      准确匹配事件等级。
      log4net.Filter.LevelRangeFilter      匹配一个范围的等级。
      log4net.Filter.LoggerMatchFilter    匹配一个日志器名字的开始。
      log4net.Filter.PropertyFilter        匹配指定属性名称的子字符串。
      log4net.Filter.StringMatchFilter    匹配事件消息的子字符串。
      -->
    <filter type="log4net.Filter.LevelRangeFilter">
      <!-- 控制输出日志的级别范围 -->
      <param name="LevelMin" value="Debug" />
      <param name="LevelMax" value="Error" />
    </filter>
  </appender>
</log4net>