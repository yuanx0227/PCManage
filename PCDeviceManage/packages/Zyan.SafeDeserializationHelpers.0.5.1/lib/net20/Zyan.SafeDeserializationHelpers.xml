<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zyan.SafeDeserializationHelpers</name>
    </assembly>
    <members>
        <member name="T:Zyan.SafeDeserializationHelpers.BinaryFormatterExtensions">
            <summary>
            Extension methods for the
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.BinaryFormatterExtensions.Safe(System.Runtime.Serialization.Formatters.Binary.BinaryFormatter)">
            <summary>
            Makes the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/> safe.
            </summary>
            <param name="fmt">The <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/> to guard.</param>
            <returns>The safe version of the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.</returns>
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.CustomDelegateSerializationHolder">
            <summary>
            Custom replacement for the DelegateSerializationHolder featuring delegate validation.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.CustomDelegateSerializationHolder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.CustomDelegateSerializationHolder"/> class.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.CustomDelegateSerializationHolder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISerializable" />
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.CustomDelegateSerializationHolder.GetRealObject(System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Runtime.Serialization.IObjectReference" />
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.DataSetSurrogate">
            <summary>
            Deserialization surrogate for the DataSet class.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.DataSetSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISerializationSurrogate" />
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.DataSetSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISerializationSurrogate" />
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.DelegateValidator">
            <summary>
            Blacklist-based delegate validator.
            </summary>
        </member>
        <member name="F:Zyan.SafeDeserializationHelpers.DelegateValidator.DefaultBlacklistedNamespaces">
            <summary>
            The default blacklist of the namespaces.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.DelegateValidator.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.DelegateValidator"/> class.
            </summary>
            <param name="blacklistedNamespaces">Namespace blacklist.</param>
        </member>
        <member name="P:Zyan.SafeDeserializationHelpers.DelegateValidator.Default">
            <summary>
            Gets or sets the default <see cref="T:Zyan.SafeDeserializationHelpers.IDelegateValidator"/> instance.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.DelegateValidator.ValidateDelegate(System.Delegate)">
            <summary>
            Validates the given delegates.
            Throws exceptions for methods defined in the blacklisted namespaces.
            </summary>
            <param name="del">The delegate to validate.</param>
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.IDelegateValidator">
            <summary>
            Interface for validating the deserialized delegates.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.IDelegateValidator.ValidateDelegate(System.Delegate)">
            <summary>
            Validates the given delegate.
            Throws exceptions for the unsafe delegates found in the invocation list.
            </summary>
            <param name="del">The delegate to validate.</param>
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.ITypeNameValidator">
            <summary>
            Interface for validating type names before loading types for deserialization.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.ITypeNameValidator.ValidateTypeName(System.String,System.String)">
            <summary>
            Validates the given type name before loading.
            Throws exceptions for the types not safe for deserialization.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="typeName">The name of the type.</param>
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.SafeSerializationBinder">
            <inheritdoc cref="T:System.Runtime.Serialization.SerializationBinder" />
        </member>
        <member name="F:Zyan.SafeDeserializationHelpers.SafeSerializationBinder.CoreLibraryAssemblyName">
            <summary>
            Core library assembly name.
            </summary>
        </member>
        <member name="F:Zyan.SafeDeserializationHelpers.SafeSerializationBinder.SystemDataAssemblyName">
            <summary>
            System.Data assembly name.
            </summary>
        </member>
        <member name="F:Zyan.SafeDeserializationHelpers.SafeSerializationBinder.DelegateSerializationHolderTypeName">
            <summary>
            System.DelegateSerializationHolder type name.
            </summary>
        </member>
        <member name="F:Zyan.SafeDeserializationHelpers.SafeSerializationBinder.DataSetTypeName">
            <summary>
            System.Data.DataSet type name.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.SafeSerializationBinder.#ctor(System.Runtime.Serialization.SerializationBinder)">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.SafeSerializationBinder"/> class.
            </summary>
            <param name="nextBinder">Next serialization binder in chain.</param>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.SafeSerializationBinder.BindToType(System.String,System.String)">
            <inheritdoc cref="T:System.Runtime.Serialization.SerializationBinder" />
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.SafeSurrogateSelector">
            <summary>
            Safe surrogate selector provides surrogates for DataSet and WindowsIdentity classes.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.SafeSurrogateSelector.#ctor(System.Runtime.Serialization.ISurrogateSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.SafeSurrogateSelector"/> class.
            </summary>
            <param name="nextSelector">Next <see cref="T:System.Runtime.Serialization.ISurrogateSelector"/>, optional.</param>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.SafeSurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.SafeSurrogateSelector.GetNextSelector">
            <inheritdoc cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.SafeSurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.TypeFullName">
            <summary>
            Represents the name of a .NET type.
            </summary>
            <remarks>
            AssemblyName doesn't contain Version part.
            </remarks>
        </member>
        <member name="P:Zyan.SafeDeserializationHelpers.TypeFullName.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
        </member>
        <member name="P:Zyan.SafeDeserializationHelpers.TypeFullName.AssemblyName">
            <summary>
            Gets or sets the name of the assembly.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.TypeFullName.Parse(System.String)">
            <summary>
            Parses the given type name and returns the <see cref="T:Zyan.SafeDeserializationHelpers.TypeFullName"/> instance.
            </summary>
            <param name="typeName">Assembly-qualified type name.</param>
            <returns>A parsed <see cref="T:Zyan.SafeDeserializationHelpers.TypeFullName"/> instance.</returns>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.TypeFullName.GetHashCode">
            <inheritdoc cref="T:System.Object" />
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.TypeFullName.Equals(Zyan.SafeDeserializationHelpers.TypeFullName)">
            <inheritdoc cref="T:System.IEquatable`1" />
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.TypeNameValidator">
            <summary>
            Validates the type names before loading them for deserialization.
            </summary>
        </member>
        <member name="F:Zyan.SafeDeserializationHelpers.TypeNameValidator.DefaultBlacklistedTypes">
            <summary>
            The default blacklist of the types.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.TypeNameValidator.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.TypeNameValidator"/> class.
            </summary>
            <param name="blacklistedTypes">The list of the blacklisted types.</param>
        </member>
        <member name="P:Zyan.SafeDeserializationHelpers.TypeNameValidator.Default">
            <summary>
            Gets or sets the default <see cref="T:Zyan.SafeDeserializationHelpers.ITypeNameValidator" /> instance.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.TypeNameValidator.ValidateTypeName(System.String,System.String)">
            <inheritdoc cref="T:Zyan.SafeDeserializationHelpers.ITypeNameValidator" />
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException">
            <summary>
            Exception to be thrown when possible deserialization vulnerability is detected.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException"/> class.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException"/> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Security.SecurityException"/>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.UnsafeDeserializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Security.SecurityException"/>
        </member>
        <member name="T:Zyan.SafeDeserializationHelpers.WindowsIdentitySurrogate">
            <summary>
            Deserialization surrogate for the WindowsIdentity class.
            </summary>
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.WindowsIdentitySurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISerializationSurrogate" />
        </member>
        <member name="M:Zyan.SafeDeserializationHelpers.WindowsIdentitySurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
            <inheritdoc cref="T:System.Runtime.Serialization.ISerializationSurrogate" />
        </member>
        <member name="T:System.Linq.Enumerable">
            <summary>
            A .NET 2.0 polyfill for the some of LINQ operators.
            </summary>
        </member>
        <member name="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns true if all items match the predicate.
            </summary>
            <typeparam name="TSource">The source item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="predicate">The predicate.</param>
            <returns>True if all items match the predicate, otherwise, false.</returns>
        </member>
        <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Transforms the given sequence.
            </summary>
            <typeparam name="TSource">The source item type.</typeparam>
            <typeparam name="TResult">The result item type.</typeparam>
            <param name="source">The source sequence.</param>
            <param name="selector">The selector function</param>
            <returns>The transformed sequence.</returns>
        </member>
        <member name="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the sequence to an array.
            </summary>
            <typeparam name="TResult">The result item type.</typeparam>
            <param name="source">The source sequence.</param>
            <returns>The array.</returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
            <summary>
            Indicates that a method is an extension method, or that a class or assembly contains extension methods.
            </summary>
        </member>
        <member name="T:System.Func`2">
            <summary>
            A .NET 2.0 function delegate polyfill.
            </summary>
            <typeparam name="T">The input parameter type.</typeparam>
            <typeparam name="TResult">The return type.</typeparam>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:System.Collections.Generic.HashSet`1">
            <summary>
            A .NET 2.0 polyfill for the HashSet{T} class.
            </summary>
            <typeparam name="T">The type of the item.</typeparam>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1"/> class.
            </summary>
            <param name="comparer">Item comparer.</param>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1"/> class.
            </summary>
            <param name="items">Items to add.</param>
            <param name="comparer">Item comparer.</param>
        </member>
        <member name="P:System.Collections.Generic.HashSet`1.Count">
            <summary>
            Gets the number of items contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of items contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:System.Collections.Generic.HashSet`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.Add(`0)">
            <summary>
            Adds an item to the set.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.Contains(`0)">
            <summary>
            Checks if the set contains an item.
            </summary>
            <param name="item">The item to check.</param>
            <returns>True, if the set contains an item.</returns>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the items of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the items copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.-or-The number of items in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.-or-Type T cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
    </members>
</doc>
